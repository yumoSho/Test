<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:task="http://www.springframework.org/schema/task" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
                           http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:property-placeholder location="classpath:config.properties"
                                  ignore-unresolvable="true" />

                                  
    <bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg>
					<props>
						<prop key="kaptcha.border">no</prop>
						<prop key="kaptcha.border.color">105,179,90</prop>
						<prop key="kaptcha.textproducer.font.color">red</prop>
						<prop key="kaptcha.image.width">240</prop>
						<prop key="kaptcha.textproducer.font.size">90</prop>
						<prop key="kaptcha.image.height">120</prop>
						<prop key="kaptcha.session.key">code</prop>
						<prop key="kaptcha.textproducer.char.length">4</prop>
						<prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>
                                  


                                  
                                  
    <context:annotation-config/>

    <context:component-scan base-package="com.glanway.jty.service">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
    <context:component-scan base-package="com.glanway.jty.utils">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <aop:aspectj-autoproxy/>


    <bean id="smsService" class="com.glanway.jty.service.sms.impl.SmsServiceImpl">
        <property name="cacheManager" ref="ehcacheMgr" />

        <property name="producer" ref="captchaProducer" />
        <property name="smsSender" ref="SmsSender" />
        <property name="captchaTimeout" value="180" />
    </bean>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="initialPoolSize" value="2" />
        <property name="maxPoolSize" value="50" />
        <property name="minPoolSize" value="2" />
        <property name="acquireIncrement" value="5" />
        <property name="checkoutTimeout" value="0"/>
        <property name="idleConnectionTestPeriod" value="3000"/>
    </bean>
    
    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
    
     <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
	<!--<bean class="com.glanway.gone.service.impl.FileLocalStorageServiceImpl">
        <property name="storageHomeRelative" value="${data.file.home.relative}" />
        <property name="storageHome" value="${data.file.home}"/>
    </bean>

    <bean class="com.glanway.gone.service.impl.ImageLocalStorageServiceImpl">
        <property name="storageHomeRelative" value="${data.image.home.relative}" />
        <property name="storageHome" value="${data.image.home}" />
        <property name="allowSizeList">
            <list></list>
        </property>
    </bean>-->

    <bean id="webContextFilter" class="org.ponly.web.servlet.WebContextFilter">
        <property name="configManager" ref="configManager"/>
    </bean>

    <bean id="configManager" class="org.ponly.config.mgt.support.JdbcConfigManager">
        <property name="dataSource" ref="dataSource"/>
        <property name="cacheManager" ref="ponlyCacheManager"/>
    </bean>

    <bean id="ponlyCacheManager" class="org.ponly.cache.ehcache.EhCacheManager" destroy-method="destroy">
        <property name="cacheManager" ref="ehcacheMgr"/>
    </bean>

    <!--
    <bean id="fileStorageService" class="org.ponly.webbase.service.support.FileStorageServiceImpl">
        <property name="fileSystem" ref="fileSystem"></property>
    </bean>
    -->




    <bean id="multipart" class="org.ponly.webbase.servlet.multipart.DefaultMultipartServlet">
        <property name="multipartService" ref="multipartService" />
    </bean>
    <bean id="ueditor" class="org.ponly.webbase.servlet.multipart.UEditorMultipartServlet">
        <property name="multipartService" ref="multipartService" />
    </bean>

    <bean id="multipartService" class="org.ponly.webbase.service.support.StylingMultipartServiceImpl">
        <property name="fileSystem" ref="fileSystem" />
    </bean>
    <!-- 具体文件系统相关内容请查阅 ponly-fs -->
    <bean id="fileSystem" class="org.ponly.fs.FileSystems" factory-method="getFileSystem">
        <!--
            local:///path
            sftp://user:password@host
        -->
        <constructor-arg index="0" value="${data.file.home}"/>
    </bean>


    <bean id="solrServer" class="org.apache.solr.client.solrj.impl.HttpSolrServer">
        <constructor-arg value="${solr.server.url}" />
    </bean>

    <import resource="spring-mybatis.xml" />
    <import resource="spring-cache.xml" />

</beans>
