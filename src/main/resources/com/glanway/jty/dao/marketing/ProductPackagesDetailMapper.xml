<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--
 Created on 2014-10-30 17:10:16

 @author crud generated
-->
<mapper namespace="com.glanway.jty.dao.marketing.ProductPackagesDetailDao">

    <!-- - - - - - - - - - Retrieve  - - - - - - - - - -->
    <!-- retrieve by id -->
    <select id="find" parameterType="long" resultMap="packagesDetailRM">
        <include refid="baseQuery"/>
        WHERE ID = #{id}
    </select>

    <!-- retrieve a unique entity -->
    <select id="findOne" parameterType="map" resultMap="packagesDetailRM">
        <include refid="baseQuery"/>
        <where>
            <include refid="support.dynamicFilters"/>
            <include refid="baseFilter"/>
        </where>
    </select>

    <!-- retrieve many entities -->
    <select id="findMany" parameterType="map" resultMap="packagesDetailRM">
        <!-- paging header sql -->
        <include refid="support.ph"/>
        <include refid="baseQuery"/>
        <where>
            <include refid="support.dynamicFilters"/>
            <include refid="baseFilter"/>
        </where>
        ORDER BY
        <trim prefixOverrides=",">
            <include refid="support.dynamicSort"/>
            , ID DESC <!-- TODO modify SORT -->
        </trim>
        <!-- paging footer sql -->
        <include refid="support.pf"/>
    </select>

    <!-- count -->
    <select id="count" parameterType="map" resultType="int">
        SELECT COUNT(1) FROM (
        SELECT
        A.*
        FROM (
        SELECT
        <include refid="dbCols"/>FROM
        T_PRODUCT_PACKAGE_DETAIL
        ) A
        )
        <where>
            <include refid="support.dynamicFilters"/>
            <include refid="baseFilter"/>
        </where>
    </select>

    <!-- - - - - - - - - - - Create - - - - - - - - - -->
    <!-- save entity to database -->
    <insert id="save" parameterType="ProductPackageDetail"  useGeneratedKeys="true" keyProperty="id">
        INSERT INTO T_PRODUCT_PACKAGE_DETAIL (
        <include refid="dbCols"/>
        ) VALUES (
        #{id},
        #{packageId},
        #{product.id},
        #{goods.id},
        #{deleted},
        #{createdBy},
        #{createdDate},
        #{lastModifiedBy},
        #{lastModifiedDate}
        )
    </insert>

    <!-- - - - - - - - - - - - Update - - - - - - - - - -->
    <!-- update already exists entity -->
    <update id="update" parameterType="ProductPackageDetail">
        UPDATE T_PRODUCT_PACKAGE_DETAIL
        <set>
            <if test="packageId != null">
                PACKAGE_ID = #{packageId},
            </if>
            <if test="product != null and product.id != null">
                PRODUCT_ID = #{product.id},
            </if>
            <if test="goods != null and goods.id != null">
                GOODS_ID = #{goods.id},
            </if>
            <if test="deleted != null">
                DELETED = #{deleted},
            </if>
            <if test="createdBy != null">
                CREATED_BY = #{createdBy},
            </if>
            <if test="createdDate != null">
                CREATED_DATE = #{createdDate},
            </if>
            <if test="lastModifiedBy != null">
                LAST_MODIFIED_BY = #{lastModifiedBy},
            </if>
            <if test="lastModifiedDate != null">
                LAST_MODIFIED_DATE = #{lastModifiedDate},
            </if>
        </set>
        WHERE ID = #{id}
    </update>

    <!-- - - - - - - - - - -  Delete - - - - - - - - - -->
    <!--
    <delete id="delete" parameterType="Allocate">
        DELETE FROM T_ALLOCATE WHERE ID = #{id}
    </delete>
    -->
    <update id="delete" parameterType="ProductPackageDetail">
        UPDATE T_PRODUCT_PACKAGE_DETAIL SET DELETED = 1 WHERE ID = #{id}
    </update>

    <update id="deleteByPackagesId" parameterType="long">
        UPDATE T_PRODUCT_PACKAGE_DETAIL SET DELETED = 1 WHERE PACKAGE_ID = #{packagesId}
    </update>

    <!-- - - - - - - - - - Result Map - - - - - - - - - -->
    <resultMap id="packagesDetailRM" type="ProductPackageDetail">
        <id property="id" column="ID"/>
        <result property="packageId" column="PACKAGE_ID"/>
        <result property="deleted" column="DELETED" />
        <result property="createdBy" column="CREATED_BY" />
        <result property="createdDate" column="CREATED_DATE" />
        <result property="lastModifiedBy" column="LAST_MODIFIED_BY" />
        <result property="lastModifiedDate" column="LAST_MODIFIED_DATE" />
        <association property="product" javaType="Product" columnPrefix="P_" >
            <id property="id" column="ID" />
            <result property="title" column="TITLE" />
            <collection property="productImgs" ofType="ProductImg" columnPrefix="I_">
                <id property="id" column="ID"/>
                <result property="path" column="PATH"/>
            </collection>
        </association>
        <association property="goods" javaType="Goods">
            <id property="id" column="ID" />
            <result property="title" column="TITLE" />
            <association property="product" javaType="Product" >
                <id property="id" column="ID" />
                <result property="title" column="TITLE" />
                <collection property="productImgs" ofType="ProductImg" columnPrefix="I_">
                    <id property="id" column="ID"/>
                    <result property="path" column="PATH"/>
                </collection>
            </association>
        </association>
    </resultMap>

    <!-- - - - - - - - - - SQL fragment - - - - - - - - - -->
    <!-- full database table columns -->
    <sql id="dbCols">
        ID,
        PACKAGE_ID,
        PRODUCT_ID,
        GOODS_ID,
        DELETED,
        CREATED_BY,
        CREATED_DATE,
        LAST_MODIFIED_BY,
        LAST_MODIFIED_DATE
    </sql>

    <!-- non condition sql fragement -->
    <sql id="baseQuery">
        SELECT
        *
        FROM (
        SELECT
        A.*
        FROM (
        SELECT
        <include refid="dbCols"/>FROM
        T_PRODUCT_PACKAGE_DETAIL
        ) A
        )
    </sql>




    <!-- full database table columns condition -->
    <sql id="baseFilter">
        <if test="id != null">
            AND ID = #{id}
        </if>
        <if test="packageId != null">
            AND PACKAGE_ID = #{packageId}
        </if>
        <if test="product != null and product.id != null">
            AND PRODUCT_ID = #{product.id}
        </if>
        <if test="goods != null and goods.id != null">
            AND GOODS_ID = #{goods.id}
        </if>
        <if test="deleted != null">
            AND DELETED = #{deleted}
        </if>
        <if test="createdBy != null">
            AND CREATED_BY = #{createdBy}
        </if>
        <if test="createdDate != null">
            AND CREATED_DATE = #{createdDate}
        </if>
        <if test="lastModifiedBy != null">
            AND LAST_MODIFIED_BY = #{lastModifiedBy}
        </if>
        <if test="lastModifiedDate != null">
            AND LAST_MODIFIED_DATE = #{lastModifiedDate}
        </if>
    </sql>

    <select id="findByPachagesId" parameterType="Long" resultType="ProductPackageDetail">
        SELECT GOODS_ID  "goods.id" FROM T_PRODUCT_PACKAGE_DETAIL
        WHERE DELETED = 0 AND PACKAGE_ID = #{packageId};
    </select>

</mapper>
